#!/bin/sh

set -e

# summary of how this script can be called:
#        * <prerm> `remove'
#        * <old-prerm> `upgrade' <new-version>
#        * <new-prerm> `failed-upgrade' <old-version>
#        * <conflictor's-prerm> `remove' `in-favour' <package> <new-version>
#        * <deconfigured's-prerm> `deconfigure' `in-favour'
#          <package-being-installed> <version> `removing'
#          <conflicting-package> <version>
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package


case "$1" in
    remove|upgrade|deconfigure)
        /etc/init.d/selinux cancel
        if [ -e /usr/share/debconf/confmodule ]; then
            . /usr/share/debconf/confmodule
            db_get selinux/updategrub || true
            if [ "x$RET" = xtrue ]; then
                db_get selinux/grub
                grub="$RET"
		defopt_trim=`/bin/grep "^# defoptions" $grub | /bin/sed -r -e 's/# defoptions=(\s+)?//' -e 's/selinux=[01](\s+)?//' -e 's/apparmor.enabled=[01](\s+)?//' -e 's/enforcing=[01](\s+?)//' -e 's/\s+$//'`
		/bin/cp "$grub" "$grub"~

		set +e
		/bin/sed -i -e "s/^# defoptions=.*$/# defoptions=$defopt_trim/" "$grub"
		if [ $? != 0 ]
		then
			/bin/cp "$grub"~ "$grub"
			echo >&2 "Error: Unable to replace defoptions in menu.lst; changes reverted.";
			exit 1
		fi
		set -e

                /usr/bin/dpkg-trigger update-grub
                db_input critical selinux/reboot || true
            else
                db_input critical selinux/uninstall || true
            fi
            db_go
        fi
    ;;

    failed-upgrade)
    ;;

    *)
        echo "prerm called with unknown argument \`$1'" >&2
        exit 1
    ;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

exit 0


